<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dqd.three.dao.MatchMapper" >
    <select id="findByCountry" parameterType="java.lang.String" resultMap="BaseResultMap">
        select id,home_name,visited_name,start_time,home_score,visited_score,country,round
        from `match` where country=#{country} AND ROUND = (SELECT MAX(ROUND) FROM `match`)
    </select>

    <select id="findByRound" resultMap="BaseResultMap">
        select id,home_name,visited_name,start_time,home_score,visited_score,country,round
        from `match` where country=#{country} and round=#{round}
    </select>

    <select id="findOneDay" resultMap="BaseResultMap">
        select id,home_name,visited_name,start_time,home_score,visited_score,country,round
        from `match`
        where start_time &gt;= #{startTime} and start_time &lt;= #{endTime}
        <if test="country!=null and country!=''">
            and country=#{country}
        </if>
        order by start_time
    </select>

  <resultMap id="BaseResultMap" type="com.dqd.three.pojo.Match" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="home_name" property="homeName" jdbcType="VARCHAR" />
    <result column="visited_name" property="visitedName" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="home_score" property="homeScore" jdbcType="INTEGER" />
    <result column="visited_score" property="visitedScore" jdbcType="INTEGER" />
    <result column="country" property="country" jdbcType="VARCHAR" />
    <result column="round" property="round" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, home_name, visited_name, start_time, home_score, visited_score, country, round
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dqd.three.pojo.MatchExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from match
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from match
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from match
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dqd.three.pojo.MatchExample" >
    delete from match
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dqd.three.pojo.Match" >
    insert into match (id, home_name, visited_name, 
      start_time, home_score, visited_score, 
      country, round)
    values (#{id,jdbcType=INTEGER}, #{homeName,jdbcType=VARCHAR}, #{visitedName,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=TIMESTAMP}, #{homeScore,jdbcType=INTEGER}, #{visitedScore,jdbcType=INTEGER}, 
      #{country,jdbcType=VARCHAR}, #{round,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.dqd.three.pojo.Match" >
    insert into match
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="homeName != null" >
        home_name,
      </if>
      <if test="visitedName != null" >
        visited_name,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="homeScore != null" >
        home_score,
      </if>
      <if test="visitedScore != null" >
        visited_score,
      </if>
      <if test="country != null" >
        country,
      </if>
      <if test="round != null" >
        round,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="homeName != null" >
        #{homeName,jdbcType=VARCHAR},
      </if>
      <if test="visitedName != null" >
        #{visitedName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="homeScore != null" >
        #{homeScore,jdbcType=INTEGER},
      </if>
      <if test="visitedScore != null" >
        #{visitedScore,jdbcType=INTEGER},
      </if>
      <if test="country != null" >
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="round != null" >
        #{round,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dqd.three.pojo.MatchExample" resultType="java.lang.Integer" >
    select count(*) from match
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update match
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.homeName != null" >
        home_name = #{record.homeName,jdbcType=VARCHAR},
      </if>
      <if test="record.visitedName != null" >
        visited_name = #{record.visitedName,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.homeScore != null" >
        home_score = #{record.homeScore,jdbcType=INTEGER},
      </if>
      <if test="record.visitedScore != null" >
        visited_score = #{record.visitedScore,jdbcType=INTEGER},
      </if>
      <if test="record.country != null" >
        country = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.round != null" >
        round = #{record.round,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update match
    set id = #{record.id,jdbcType=INTEGER},
      home_name = #{record.homeName,jdbcType=VARCHAR},
      visited_name = #{record.visitedName,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      home_score = #{record.homeScore,jdbcType=INTEGER},
      visited_score = #{record.visitedScore,jdbcType=INTEGER},
      country = #{record.country,jdbcType=VARCHAR},
      round = #{record.round,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dqd.three.pojo.Match" >
    update match
    <set >
      <if test="homeName != null" >
        home_name = #{homeName,jdbcType=VARCHAR},
      </if>
      <if test="visitedName != null" >
        visited_name = #{visitedName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="homeScore != null" >
        home_score = #{homeScore,jdbcType=INTEGER},
      </if>
      <if test="visitedScore != null" >
        visited_score = #{visitedScore,jdbcType=INTEGER},
      </if>
      <if test="country != null" >
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="round != null" >
        round = #{round,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dqd.three.pojo.Match" >
    update match
    set home_name = #{homeName,jdbcType=VARCHAR},
      visited_name = #{visitedName,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      home_score = #{homeScore,jdbcType=INTEGER},
      visited_score = #{visitedScore,jdbcType=INTEGER},
      country = #{country,jdbcType=VARCHAR},
      round = #{round,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>